{"version":3,"sources":["constans.js","components/CityWeather/CityWeather.js","components/UkrainianCitysWeather/SearchInput/SearchInput.js","components/UkrainianCitysWeather/UkrainianCitysWeather.js","actions/actionCreators.js","components/UkrainianCitysWeather/UkrainianCitysWeatherContainer.js","components/SearchWorldwideCity/WorldwideCity/WorldwideCity.js","components/SearchWorldwideCity/SearchWorldwideCity.js","components/SearchWorldwideCity/SearchWorldWideCityContainer.js","App.js","reducers/ukrainianCitys.js","reducers/worldwideCitys.js","reducers/index.js","index.js"],"names":["listOfCitys","CityWeather","city","rusCity","data","loadData","useState","isAdvanced","setAdvance","_icon","setIcon","useEffect","icon","weather","className","style","backgroundImage","main","pressure","humidity","wind","speed","Math","round","temp","onClick","SearchInput","cityList","removeCity","type","placeholder","onChange","value","target","newList","filter","item","toLowerCase","search","trim","JSON","stringify","to","UkrainianCitysWeather","this","props","map","key","Component","setData","payload","setWorldwideData","worldwideData","country","isWorldWide","dispatch","getState","fetch","then","res","status","json","ukrainianCitysReducer","newData","Object","assign","error","statusText","UkrainianCitysWeatherWrapped","connect","WorldwideCity","keys","length","name","sys","SearchWorldwideCity","currentTarget","previousElementSibling","SearchWorldwideCityWrapped","worldwideCitysReducer","App","exact","path","component","initialState","rootReducer","combineReducers","state","action","store","createStore","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"gXAAaA,EAAc,CAAC,CAAC,OAAQ,4BAAS,CAAC,OAAQ,kCAAU,CAAC,SAAU,wCAAW,CAAC,UAAW,8CACnG,CAAC,iBAAkB,wCAAW,CAAC,UAAW,wCAAW,CAAC,kBAAmB,yFACzE,CAAC,eAAgB,sEAAgB,CAAC,WAAY,oDAAa,CAAC,YAAa,oDAAa,CAAC,YAAa,8CACpG,CAAC,UAAW,8CAAY,CAAC,UAAW,8CAAY,CAAC,aAAc,oDAAa,CAAC,WAAY,0DACzF,CAAC,QAAS,kCAAU,CAAC,OAAQ,4BAAS,CAAC,aAAc,sEAAgB,CAAC,aAAc,sEACpF,CAAC,aAAc,gEAAe,CAAC,YAAa,oDAAa,CAAC,eAAgB,0DAAc,CAAC,WAAY,8CACrG,CAAC,OAAQ,kCAAU,CAAC,eAAgB,8EC0CrBC,G,MA3CK,SAAC,GAAuC,IAArCC,EAAoC,EAApCA,KAAMC,EAA8B,EAA9BA,QAASC,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,SAAe,EAEtBC,oBAAS,GAFa,mBAEhDC,EAFgD,KAEpCC,EAFoC,OAG9BF,mBAAS,IAHqB,mBAGhDG,EAHgD,KAGzCC,EAHyC,KAkBvD,OAbAC,qBAAU,WACDP,EAAKF,IACNG,EAASH,KAEd,IAEHS,qBAAU,WACN,GAAIP,EAAKF,KAAUO,EAAO,CACtB,IAAMG,EAAOR,EAAKF,GAAMW,QAAQ,GAAGD,KACnCF,EAAQ,qCAAD,OAAsCE,EAAtC,gBAKX,yBAAKE,UAAU,sCAAsCC,MAAO,CAAEC,gBAAgB,OAAD,OAASP,GAASA,EAAlB,OAErEA,EAASF,EAMJ,oCACG,uBAAGO,UAAU,kCAAkCV,EAAKF,GAAMW,QAAQ,GAAGI,MACrE,uBAAGH,UAAU,kCAAb,qDAAyDV,EAAKF,GAAMe,KAAKC,SAAzE,uBACA,uBAAGJ,UAAU,kCAAb,2DAA0DV,EAAKF,GAAMe,KAAKE,SAA1E,KACA,uBAAGL,UAAU,8BAAb,mCAAkDV,EAAKF,GAAMkB,KAAKC,MAAlE,yBAVe,oCACnB,uBAAGP,UAAU,8BAA8BX,GAC3C,uBAAGW,UAAU,iCAAb,MACA,uBAAGA,UAAU,8BAA8BQ,KAAKC,MAAMnB,EAAKF,GAAMe,KAAKO,MAAtE,SAWI,yBAAKV,UAAU,YAG1BL,GAAS,uBAAGK,UAAU,gCAAgCW,QAAS,kBAAMjB,GAAYD,KAAeA,EAAa,iCAAU,gE,gBCvBrHmB,EAfK,SAAC,GAA8B,IAA5BC,EAA2B,EAA3BA,SAAUC,EAAiB,EAAjBA,WAO7B,OACI,yBAAKd,UAAU,2BACX,2BAAOe,KAAK,OAAOC,YAAY,0CAAYhB,UAAU,gCAAgCiB,SAP1E,SAAC,GAA2B,IAAfC,EAAc,EAAxBC,OAAUD,MACtBE,EAAUlC,EAAYmC,QAAO,SAACC,GAAD,OAAwE,IAA9DA,EAAK,GAAGC,cAAcC,OAAON,EAAMK,cAAcE,WAC9FC,KAAKC,UAAUd,KAAca,KAAKC,UAAUP,IAAYN,EAAWM,MAM/D,kBAAC,IAAD,CAAMQ,GAAG,UAAU5B,UAAU,mCAA7B,yECMG6B,G,uLAbD,IAAD,EAC4CC,KAAKC,MAA9CjB,EADH,EACGA,WAAYD,EADf,EACeA,SAAUvB,EADzB,EACyBA,KAAMC,EAD/B,EAC+BA,SACpC,OACI,yBAAKS,UAAU,mBACX,kBAAC,EAAD,CAAac,WAAYA,EAAYD,SAAUA,IAE3CA,EAASmB,KAAI,SAAC5C,GAAD,OAAU,kBAAC,EAAD,CAAa6C,IAAK7C,EAAMA,KAAMA,EAAK,GAAIC,QAASD,EAAK,GAAIE,KAAMA,EAAMC,SAAUA,Y,GARtF2C,c,OCKvBC,EAAU,SAAC7C,GAAD,MAAW,CAC9ByB,KAVoB,WAWpBqB,QAAS9C,IAGA+C,EAAmB,SAACC,GAAD,MAAoB,CAChDvB,KAdiC,wBAejCqB,QAASE,IAGA/C,EAAW,SAACH,GAAD,IAAOmD,EAAP,uDAAiB,UAAWC,EAA5B,wDAAiDP,EAAjD,uDJbL,mCIaK,OAA+D,SAACQ,EAAUC,GAC9FC,MAAM,qDAAD,OAAsDvD,EAAtD,YAA8DmD,EAA9D,kBAA+EN,EAA/E,kBACAW,MAAK,SAACC,GACH,GAAmB,MAAfA,EAAIC,OACJ,OAAOD,EAAIE,OAAOH,MAAK,SAACG,GACpB,GAAKP,EAMDC,EAASJ,EAAiBU,QANZ,CAAC,IACkBzD,EAAWoD,IAApCM,sBAAyB1D,KAC3B2D,EAAUC,OAAOC,OAAO,GAAI7D,GAClC2D,EAAQ7D,GAAQ2D,EAChBN,EAASN,EAAQc,QAMzBR,EAASJ,EAAiB,CAAEe,MAAOP,EAAIQ,mBCpB1CC,EAA+BC,aAAQ,oBAAGP,sBAAH,MAG3C,CACLnC,SAJgD,EAChDA,SAIAvB,KALgD,EAEhDA,QAIA,CACAwB,WDjBsB,SAACD,GAAD,MAAe,CACrCE,KANuB,cAOvBqB,QAASvB,ICgBTtB,YARwCgE,EAXL,SAAC,GAA8C,IAA5C1C,EAA2C,EAA3CA,SAAUvB,EAAiC,EAAjCA,KAAMwB,EAA2B,EAA3BA,WAAYvB,EAAe,EAAfA,SAClE,OACI,kBAAC,EAAD,CACIsB,SAAUA,EACVvB,KAAMA,EACNwB,WAAYA,EACZvB,SAAUA,OC6BPiE,G,YArCO,SAAC,GAAc,IAAZlE,EAAW,EAAXA,KAAW,EAECE,oBAAS,GAFV,mBAEzBC,EAFyB,KAEbC,EAFa,OAGPF,oBAAS,GAHF,mBAGzBG,EAHyB,KAGlBC,EAHkB,KAYhC,OAPAC,qBAAU,WACN,GAAiC,IAA7BqD,OAAOO,KAAKnE,GAAMoE,SAAiB/D,IAAUL,EAAK8D,MAAO,CACzD,IAAMtD,EAAOR,EAAKS,QAAQ,GAAGD,KAC7BF,EAAQ,qCAAD,OAAsCE,EAAtC,gBAKX,yBAAKE,UAAU,wCAAwCC,MAAO,CAAEC,gBAAgB,OAAD,OAASP,GAASA,EAAlB,OAEvEA,GAASL,EAAK8D,MAAS3D,EAMlB,oCACG,uBAAGO,UAAU,oCAAoCV,EAAKS,QAAQ,GAAGI,MACjE,uBAAGH,UAAU,oCAAb,qDAA2DV,EAAKa,KAAKC,SAArE,uBACA,uBAAGJ,UAAU,oCAAb,2DAA4DV,EAAKa,KAAKE,SAAtE,KACA,uBAAGL,UAAU,gCAAb,mCAAoDV,EAAKgB,KAAKC,MAA9D,yBAV6B,oCACjC,uBAAGP,UAAU,iCAAiCV,EAAK8D,OAAS9D,EAAKqE,MACjE,uBAAG3D,UAAU,oCAAoCV,EAAK8D,OAAS9D,EAAKsE,IAAIrB,SACxE,uBAAGvC,UAAU,iCAAiCV,EAAK8D,OAAS5C,KAAKC,MAAMnB,EAAKa,KAAKO,MAAQ,QACzF,uBAAGV,UAAU,iCAAiCV,EAAK8D,OAAS9D,EAAK8D,QAU7D,yBAAKpD,UAAU,YAG1BL,IAAUL,EAAK8D,OAAS,uBAAGpD,UAAU,kCAAkCW,QAAS,kBAAMjB,GAAYD,KAAeA,EAAa,iCAAU,gECTtIoE,EAtBa,SAAC,GAAiC,IAA/BvB,EAA8B,EAA9BA,cAAe/C,EAAe,EAAfA,SAQ1C,OACI,yBAAKS,UAAU,oBACX,yBAAKA,UAAU,aACX,yBAAKA,UAAU,0BACX,2BAAOe,KAAK,OAAOC,YAAY,0BAA0BhB,UAAU,2BACnE,2BAAOe,KAAK,OAAOC,YAAY,6BAA6BhB,UAAU,8BACtE,4BAAQA,UAAU,2BAA2BW,QAZ1C,SAAC,GAAuB,IAArBmD,EAAoB,EAApBA,cACZvB,EAAUuB,EAAcC,uBAAuB7C,MAC/C9B,EAAO0E,EAAcC,uBAAuBA,uBAAuB7C,MACzEqB,GAAWnD,GAAQG,EAASH,EAAMmD,GAAS,KAS/B,WAEmC,IAAtCW,OAAOO,KAAKnB,GAAeoB,QAAgB,kBAAC,EAAD,CAAepE,KAAMgD,OCNpE0B,EAA6BT,aAAQ,kBAEzC,CACLjB,cAH8C,EAAG2B,sBACjD3B,iBAGA,CACA/C,YALsCgE,EATL,SAAC,GAAiC,IAA/BjB,EAA8B,EAA9BA,cAAe/C,EAAe,EAAfA,SACnD,OACI,kBAAC,EAAD,CACI+C,cAAeA,EACf/C,SAAUA,OCKP2E,MATf,WACE,OACE,oCACE,kBAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAWxC,IACjC,kBAAC,IAAD,CAAOsC,OAAK,EAACC,KAAK,UAAUC,UAAWR,M,+BCHvCS,EAAe,CACjBzD,SAAU3B,EACVI,KAAM,ICJJgF,EAAe,CACjBhC,cAAe,ICDNiC,EAAcC,0BAAgB,CACvCxB,sBFMiC,WAAmC,IAAlCyB,EAAiC,uDAAzBH,EAAcI,EAAW,uCACnE,OAAQA,EAAO3D,MACX,INZmB,cMaf,OAAO,eACA0D,EADP,CAEI5D,SAAU6D,EAAOtC,UAEzB,INhBgB,WMiBZ,OAAO,eACAqC,EADP,CAEInF,KAAMoF,EAAOtC,UAErB,QACI,OAAOqC,IElBfR,sBDEiC,WAAmC,IAAlCQ,EAAiC,uDAAzBH,EAAcI,EAAW,uCACnE,OAAQA,EAAO3D,MACX,IPP6B,wBOQzB,OAAO,eACA0D,EADP,CAEInC,cAAeoC,EAAOtC,UAG9B,QACI,OAAOqC,MENbE,EAAQC,sBAAYL,EAAaM,8BAAoBC,0BAAgBC,OAE3EC,IAASC,OAAO,kBAAC,IAAD,CAAUN,MAAOA,GAC7B,kBAAC,IAAD,KAAQ,kBAAC,EAAD,QAENO,SAASC,eAAe,W","file":"static/js/main.b6e60c0c.chunk.js","sourcesContent":["export const listOfCitys = [[\"Kiev\", \"Киев\"], [\"Lvov\", \"Львов\"], [\"Odessa\", \"Одесса\"], [\"Kharkiv\", \"Харьков\"],\r\n[\"Dnipropetrovsk\", \"Днепро\"], [\"Donetsk\", \"Донецк\"], [\"Ivano-Frankivsk\", \"Ивано-Франковск\"],\r\n[\"Khmelnytskyy\", \"Хмельницкий\"], [\"Cherkasy\", \"Черкассы\"], [\"Mykolayiv\", \"Николаев\"], [\"Vinnytsya\", \"Винница\"],\r\n[\"Poltava\", \"Полтава\"], [\"Luhansk\", \"Луганск\"], [\"Chernivtsi\", \"Черновцы\"], [\"Ternopil\", \"Тернополь\"],\r\n[\"Rivne\", \"Ровно\"], [\"Sumy\", \"Сумы\"], [\"Simferopol\", \"Симферополь\"], [\"Sevastopol\", \"Сепастополь\"],\r\n[\"Kirovohrad\", \"Кировоград\"], [\"Chernihiv\", \"Чернигов\"], [\"Zaporizhzhya\", \"Запорожье\"], [\"Zhytomyr\", \"Житомир\"],\r\n[\"Uman\", \"Умань\"], [\"Bila Tserkva\", \"Белая Церковь\"]];\r\n\r\nexport const key = '1b389effa61d214000353bcab89a9f52';\r\n","import { key } from \"../../constans\"\r\nimport React, { useState, useEffect } from 'react';\r\nimport \"./CityWeather.scss\";\r\n// import { TransitionGroup, CSSTransition } from \"react-transition-group\";\r\n\r\nconst CityWeather = ({ city, rusCity, data, loadData }) => {\r\n\r\n    const [isAdvanced, setAdvance] = useState(false);\r\n    const [_icon, setIcon] = useState('');\r\n\r\n    useEffect(() => {\r\n        if (!data[city]) {\r\n            loadData(city);\r\n        }\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        if (data[city] && !_icon) {\r\n            const icon = data[city].weather[0].icon;\r\n            setIcon(`https://openweathermap.org/img/wn/${icon}@2x.png`);\r\n        }\r\n    })\r\n\r\n    return (\r\n        <div className=\"ukraine-weather__city weather__city\" style={{ backgroundImage: `url(${_icon && _icon})` }}>\r\n            {\r\n                _icon ? !isAdvanced ? (<>\r\n                    <p className=\"ukraine-weather__city-name\">{rusCity}</p>\r\n                    <p className=\"ukraine-weather__city-country\">UA</p>\r\n                    <p className=\"ukraine-weather__city-temp\">{Math.round(data[city].main.temp)}&deg;</p>\r\n\r\n                </>) :\r\n                    (<>\r\n                        <p className=\"ukraine-weather__city-describe\">{data[city].weather[0].main}</p>\r\n                        <p className=\"ukraine-weather__city-pressure\">Давление: {data[city].main.pressure} Пск</p>\r\n                        <p className=\"ukraine-weather__city-humidity\">Влажность: {data[city].main.humidity}%</p>\r\n                        <p className=\"ukraine-weather__city-wind\">Ветер: {data[city].wind.speed} км/ч</p>\r\n                    </>)\r\n                    :\r\n                    (\r\n                        <div className=\"loading\"></div>\r\n                    )\r\n            }\r\n            {_icon && <p className=\"ukraine-weather__city-advance\" onClick={() => setAdvance(!isAdvanced)} >{isAdvanced ? \"Назад\" : \"Подробнее...\"}</p>}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CityWeather;\r\n\r\n","import React from 'react';\r\nimport \"./SearchInput.scss\";\r\nimport { Link } from 'react-router-dom';\r\nimport { listOfCitys } from \"../../../constans\";\r\n\r\nconst SearchInput = ({ cityList, removeCity }) => {\r\n\r\n    const searchCity = ({ target: { value } }) => {\r\n        const newList = listOfCitys.filter((item) => item[1].toLowerCase().search(value.toLowerCase().trim()) !== -1)\r\n        JSON.stringify(cityList) !== JSON.stringify(newList) && removeCity(newList);\r\n    }\r\n\r\n    return (\r\n        <div className=\"ukraine-weather__search\">\r\n            <input type=\"text\" placeholder=\"Одесса...\" className=\"ukraine-weather__search-input\" onChange={searchCity} />\r\n            <Link to=\"/search\" className=\"ukraine-weather__search-another\">Другой город</Link>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SearchInput;","import React, { Component } from 'react';\r\nimport CityWeather from '../CityWeather/CityWeather';\r\nimport SearchInput from './SearchInput/SearchInput';\r\nimport \"./UkrainianCity.scss\";\r\n\r\n\r\nclass UkrainianCitysWeather extends Component {\r\n\r\n    render() {\r\n        const { removeCity, cityList, data, loadData } = this.props;\r\n        return (\r\n            <div className=\"ukraine-weather\">\r\n                <SearchInput removeCity={removeCity} cityList={cityList} />\r\n                {\r\n                    cityList.map((city) => <CityWeather key={city} city={city[0]} rusCity={city[1]} data={data} loadData={loadData} />)\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default UkrainianCitysWeather;","import { key as Key } from '../constans';\r\nexport const REMOVE_CITY = \"REMOVE_CITY\";\r\nexport const SET_DATA = \"SET_DATA\";\r\nexport const UPDATE_WORLDWIDE_DATA = \"UPDATE_WORLDWIDE_DATA\";\r\n\r\n\r\nexport const removeCity = (cityList) => ({\r\n    type: REMOVE_CITY,\r\n    payload: cityList\r\n})\r\n\r\nexport const setData = (data) => ({\r\n    type: SET_DATA,\r\n    payload: data\r\n})\r\n\r\nexport const setWorldwideData = (worldwideData) => ({\r\n    type: UPDATE_WORLDWIDE_DATA,\r\n    payload: worldwideData\r\n})\r\n\r\nexport const loadData = (city, country = \"Ukraine\", isWorldWide = false, key = Key) => (dispatch, getState) => {\r\n    fetch(`https://api.openweathermap.org/data/2.5/weather?q=${city},${country}&appid=${key}&units=metric`)\r\n        .then((res) => {\r\n            if (res.status !== 404) {\r\n                return res.json().then((json) => {\r\n                    if (!isWorldWide) {\r\n                        const { ukrainianCitysReducer: { data } } = getState();\r\n                        const newData = Object.assign({}, data);\r\n                        newData[city] = json;\r\n                        dispatch(setData(newData))\r\n                    } else {\r\n                        dispatch(setWorldwideData(json));\r\n                    }\r\n                })\r\n            } else {\r\n                dispatch(setWorldwideData({ error: res.statusText }));\r\n            }\r\n        })\r\n\r\n}","import React from 'react';\r\nimport UkrainianCitysWeather from \"./UkrainianCitysWeather\";\r\nimport { connect } from \"react-redux\";\r\nimport { removeCity, loadData } from '../../actions/actionCreators';\r\n\r\nconst UkrainianCitysWeatherContainer = ({ cityList, data, removeCity, loadData }) => {\r\n    return (\r\n        <UkrainianCitysWeather\r\n            cityList={cityList}\r\n            data={data}\r\n            removeCity={removeCity}\r\n            loadData={loadData}\r\n        />\r\n    );\r\n}\r\n\r\nexport const UkrainianCitysWeatherWrapped = connect(({ ukrainianCitysReducer: {\r\n    cityList,\r\n    data\r\n} }) => ({\r\n    cityList,\r\n    data\r\n}), {\r\n    removeCity,\r\n    loadData\r\n})(UkrainianCitysWeatherContainer)","import React, { useState, useEffect } from 'react';\r\nimport \"./WorldwideCity.scss\";\r\n\r\nconst WorldwideCity = ({ data }) => {\r\n\r\n    const [isAdvanced, setAdvance] = useState(false);\r\n    const [_icon, setIcon] = useState(false);\r\n\r\n    useEffect(() => {\r\n        if (Object.keys(data).length !== 0 && !_icon && !data.error) {\r\n            const icon = data.weather[0].icon;\r\n            setIcon(`https://openweathermap.org/img/wn/${icon}@2x.png`);\r\n        }\r\n    })\r\n\r\n    return (\r\n        <div className=\"worldwide-weather__city weather__city\" style={{ backgroundImage: `url(${_icon && _icon})` }}>\r\n            {\r\n                _icon || data.error ? !isAdvanced ? (<>\r\n                    <p className=\"worldwide-weather__city-name\">{!data.error && data.name}</p>\r\n                    <p className=\"worldwide-weather__city-country\">{!data.error && data.sys.country}</p>\r\n                    <p className=\"worldwide-weather__city-temp\">{!data.error && Math.round(data.main.temp) + '°'}</p>\r\n                    <p className=\"worldwide-weather__city-error\">{data.error && data.error}</p>\r\n                </>) :\r\n                    (<>\r\n                        <p className=\"worldwide-weather__city-describe\">{data.weather[0].main}</p>\r\n                        <p className=\"worldwide-weather__city-pressure\">Давление: {data.main.pressure} Пск</p>\r\n                        <p className=\"worldwide-weather__city-humidity\">Влажность: {data.main.humidity}%</p>\r\n                        <p className=\"worldwide-weather__city-wind\">Ветер: {data.wind.speed} км/ч</p>\r\n                    </>)\r\n                    :\r\n                    (\r\n                        <div className=\"loading\"></div>\r\n                    )\r\n            }\r\n            {_icon && !data.error && <p className=\"worldwide-weather__city-advance\" onClick={() => setAdvance(!isAdvanced)} >{isAdvanced ? \"Назад\" : \"Подробнее...\"}</p>}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default WorldwideCity;\r\n\r\n","import React from 'react';\r\nimport \"./SearchWorldwideCity.scss\";\r\nimport WorldwideCity from './WorldwideCity/WorldwideCity';\r\n\r\nconst SearchWorldwideCity = ({ worldwideData, loadData }) => {\r\n\r\n    const searchCity = ({ currentTarget }) => {\r\n        const country = currentTarget.previousElementSibling.value;\r\n        const city = currentTarget.previousElementSibling.previousElementSibling.value;\r\n        country && city && loadData(city, country, true);\r\n    }\r\n\r\n    return (\r\n        <div className=\"search-worldwide\">\r\n            <div className=\"container\">\r\n                <div className=\"search-worldwide__area\">\r\n                    <input type=\"text\" placeholder=\"Type city in English...\" className=\"search-worldwide__city\" />\r\n                    <input type=\"text\" placeholder=\"Type country in English...\" className=\"search-worldwide__country\" />\r\n                    <button className=\"search-worldwide__button\" onClick={searchCity}>Search</button>\r\n                </div>\r\n                {Object.keys(worldwideData).length !== 0 && <WorldwideCity data={worldwideData} />}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SearchWorldwideCity;\r\n\r\n","import React from 'react';\r\nimport SearchWorldwideCity from \"./SearchWorldwideCity\";\r\nimport { connect } from \"react-redux\";\r\nimport { loadData } from '../../actions/actionCreators';\r\n\r\nconst SearchWorldwideCityContainer = ({ worldwideData, loadData }) => {\r\n    return (\r\n        <SearchWorldwideCity\r\n            worldwideData={worldwideData}\r\n            loadData={loadData}\r\n        />\r\n    );\r\n}\r\n\r\nexport const SearchWorldwideCityWrapped = connect(({ worldwideCitysReducer: {\r\n    worldwideData\r\n} }) => ({\r\n    worldwideData\r\n}), {\r\n    loadData\r\n})(SearchWorldwideCityContainer)","import React from 'react';\nimport { Route } from \"react-router-dom\";\nimport { UkrainianCitysWeatherWrapped as UkrainianCitysWeather } from './components/UkrainianCitysWeather/UkrainianCitysWeatherContainer';\nimport { SearchWorldwideCityWrapped as SearchWorldwideCity } from './components/SearchWorldwideCity/SearchWorldWideCityContainer';\n\nfunction App() {\n  return (\n    <>\n      <Route exact path=\"/\" component={UkrainianCitysWeather} />\n      <Route exact path=\"/search\" component={SearchWorldwideCity} />\n    </>\n  );\n}\n\nexport default App;\n","import {\r\n    REMOVE_CITY,\r\n    SET_DATA\r\n} from \"../actions/actionCreators\";\r\nimport { listOfCitys } from \"../constans\";\r\n\r\nconst initialState = {\r\n    cityList: listOfCitys,\r\n    data: {},\r\n}\r\n\r\nexport const ukrainianCitysReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case REMOVE_CITY:\r\n            return {\r\n                ...state,\r\n                cityList: action.payload\r\n            }\r\n        case SET_DATA:\r\n            return {\r\n                ...state,\r\n                data: action.payload\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n","import {\r\n    UPDATE_WORLDWIDE_DATA\r\n} from \"../actions/actionCreators\";\r\n\r\nconst initialState = {\r\n    worldwideData: {}\r\n}\r\n\r\nexport const worldwideCitysReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case UPDATE_WORLDWIDE_DATA:\r\n            return {\r\n                ...state,\r\n                worldwideData: action.payload\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n","import { combineReducers } from \"redux\";\r\nimport { ukrainianCitysReducer } from \"./ukrainianCitys\";\r\nimport { worldwideCitysReducer } from \"./worldwideCitys\";\r\n\r\nexport const rootReducer = combineReducers({\r\n    ukrainianCitysReducer,\r\n    worldwideCitysReducer\r\n})","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport { Provider } from 'react-redux';\nimport thunk from 'redux-thunk';\nimport { createStore, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport { rootReducer } from './reducers/index';\nimport { BrowserRouter as Router } from 'react-router-dom';\n\nconst store = createStore(rootReducer, composeWithDevTools(applyMiddleware(thunk)));\n\nReactDOM.render(<Provider store={store}>\n    <Router><App /></Router>\n</Provider>\n    , document.getElementById('root'));\n\n\n"],"sourceRoot":""}