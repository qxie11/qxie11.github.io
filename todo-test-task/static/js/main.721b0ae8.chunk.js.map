{"version":3,"sources":["components/Todo/Task/index.tsx","components/Todo/index.tsx","App.tsx","index.tsx"],"names":["Task","task","deleateTask","useState","currentValue","setValue","isEditing","setEditing","className","type","id","htmlFor","value","onChange","target","onClick","thisTask","currentTarget","parentElement","index","Array","from","children","indexOf","Todo","tasks","setTasks","newTasks","splice","placeholder","trim","prevState","map","i","key","App","ReactDOM","render","document","getElementById"],"mappings":"0MAiCeA,EA1BmB,SAAC,GAA2B,IAAzBC,EAAwB,EAAxBA,KAAMC,EAAkB,EAAlBA,YAAkB,EAC1BC,mBAAiBF,GADS,mBACpDG,EADoD,KACtCC,EADsC,OAE3BF,oBAAkB,GAFS,mBAEpDG,EAFoD,KAEzCC,EAFyC,KAe3D,OACE,yBAAKC,UAAU,oBACb,2BAAOC,KAAK,WAAWC,GAAIT,IAC3B,2BAAOO,UAAU,UAAUG,QAASV,IAClCK,EAAqD,8BAAUM,MAAOR,EAAcS,SARlE,SAAC,GAAD,IAAaD,EAAb,EAAGE,OAAUF,MAAb,OAAmEP,EAASO,MAQlF,uBAAGJ,UAAU,QAAQJ,GACnC,yBAAKW,QAPQ,kBAAMR,GAAYD,IAOPE,UAAYF,EAAqB,QAAT,SAChD,0BAAMS,QAjBU,SAAC,GAA0D,IACvEC,EADsE,EAAvDC,cACWC,cAE1BC,EADWC,MAAMC,KAAKL,EAAUE,cAAeI,UAC9BC,QAAQP,GAC/Bd,EAAYiB,IAakBX,UAAU,WAAtC,YCQSgB,G,MAhCQ,WAAO,IAAD,EACCrB,mBAAmB,IADpB,mBAClBsB,EADkB,KACXC,EADW,OAEQvB,mBAAiB,IAFzB,mBAElBC,EAFkB,KAEJC,EAFI,KAYnBH,EAAc,SAACiB,GACjB,IAAIQ,EAAQ,YAAOF,GACnBE,EAASC,OAAOT,EAAO,GACvBO,EAASC,IAIb,OACI,yBAAKnB,UAAU,QACX,2BAAOC,KAAK,OAAOoB,YAAY,iBAAiBrB,UAAU,cAAcK,SAXxD,SAAC,GAAD,IAAaD,EAAb,EAAGE,OAAUF,MAAb,OAAgEP,EAASO,IAWUA,MAAOR,IAC1G,4BAAQI,UAAU,mBAAmBO,QAlB7B,WACPX,EAAa0B,SAClBJ,GAAS,SAACK,GAAD,4BAAmBA,GAAnB,CAA8B3B,OACvCC,EAAS,OAeL,OACA,yBAAKG,UAAU,eAEPiB,EAAMO,KAAI,SAAC/B,EAAMgC,GAAP,OAAa,kBAAC,EAAD,CAAMC,IAAKjC,EAAOgC,EAAGhC,KAAMA,EAAMC,YAAaA,WCrB1EiC,G,MAJO,WAClB,OAAO,kBAAC,EAAD,QCDXC,IAASC,OACL,kBAAC,EAAD,MACFC,SAASC,eAAe,U","file":"static/js/main.721b0ae8.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\n\r\ninterface TaskProps {\r\n  task: string,\r\n  deleateTask: (index: number) => void\r\n}\r\n\r\nconst Task: React.FC<TaskProps> = ({ task, deleateTask }) => {\r\n  const [currentValue, setValue] = useState<string>(task);\r\n  const [isEditing, setEditing] = useState<boolean>(false);\r\n\r\n  const defineIndex = ({ currentTarget }: React.MouseEvent<HTMLSpanElement>) => {\r\n    const thisTask = currentTarget!.parentElement;\r\n    const taskArea = Array.from(thisTask!.parentElement!.children);\r\n    const index = taskArea.indexOf(thisTask!);\r\n    deleateTask(index);\r\n  }\r\n\r\n  const changeTaskValue = ({ target: { value } }: React.ChangeEvent<HTMLTextAreaElement>) => setValue(value);\r\n\r\n  const editTask = () => setEditing(!isEditing);\r\n\r\n  return (\r\n    <div className=\"todo__tasks-task\">\r\n      <input type=\"checkbox\" id={task} />\r\n      <label className=\"is-done\" htmlFor={task}></label>\r\n      {!isEditing ? <p className=\"text\">{currentValue}</p> : <textarea value={currentValue} onChange={changeTaskValue} />}\r\n      <div onClick={editTask} className={!isEditing ? \"edit\" : \"ready\"}></div>\r\n      <span onClick={defineIndex} className=\"deleate\">&#x2716;</span>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Task;","import React, { useState } from \"react\";\r\nimport Task from \"./Task\";\r\nimport \"./Todo.scss\";\r\n\r\nconst Todo: React.FC = () => {\r\n    const [tasks, setTasks] = useState<string[]>([]);\r\n    const [currentValue, setValue] = useState<string>('');\r\n\r\n    const addTask = () => {\r\n        if (!currentValue.trim()) return;\r\n        setTasks((prevState) => [...prevState, currentValue]);\r\n        setValue('');\r\n    }\r\n\r\n    const setCurrentValue = ({ target: { value } }: React.ChangeEvent<HTMLInputElement>) => setValue(value);\r\n\r\n    const deleateTask = (index: number) => {\r\n        let newTasks = [...tasks];\r\n        newTasks.splice(index, 1);\r\n        setTasks(newTasks);\r\n    };\r\n\r\n\r\n    return (\r\n        <div className=\"todo\">\r\n            <input type=\"text\" placeholder=\"Type your task\" className=\"todo__input\" onChange={setCurrentValue} value={currentValue} />\r\n            <button className=\"todo__add-button\" onClick={addTask}>ADD</button>\r\n            <div className=\"todo__tasks\">\r\n                {\r\n                    tasks.map((task, i) => <Task key={task + i} task={task} deleateTask={deleateTask} />)\r\n                }\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Todo;","import React from \"react\";\r\nimport Todo from './components/Todo';\r\nimport \"./index.scss\";\r\n\r\nconst App: React.FC = () => {\r\n    return <Todo />\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n    <App />,\r\n  document.getElementById('root')\r\n);\r\n\r\n"],"sourceRoot":""}